{
  "hash": "24bb858a6230f5503cd0ad3935f53213",
  "result": {
    "markdown": "---\ntitle: \"Tidyverse\"\nauthor: \"Berk Ali Cam\"\n---\n\n::: {.cell hash='01_tidyverse_cache/html/unnamed-chunk-1_fb2cb325d21d22b269dd9afd6711f11a'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(lubridate)\n\n# Load the dataset\nbike_orderlines_wrangled_tbl <- read_rds('../../assets/datasets/bike_orderlines_wrangled_tbl.rds')\n\n#---- Part-1 ----\n\n# Extract state and city\nbike_orderlines_wrangled_tbl <- bike_orderlines_wrangled_tbl %>%\n  separate(col = location, into = c(\"city\", \"state\"), sep = \", \")\n\n# Calculate sales by state\nsales_by_state_tbl <- bike_orderlines_wrangled_tbl %>%\n  group_by(state) %>%\n  summarize(sales = sum(total_price)) %>%\n  ungroup() %>%\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\",\n                                     decimal.mark = \",\",\n                                     prefix = \"\",\n                                     suffix = \" €\"))\n\n# Get the state with the highest revenue\nhighest_revenue_state <- sales_by_state_tbl %>%\n  arrange(desc(sales)) %>%\n  slice(1)\nprint(highest_revenue_state)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> # A tibble: 1 × 3\n#>   state                     sales sales_text  \n#>   <chr>                     <dbl> <chr>       \n#> 1 North Rhine-Westphalia 21200613 21.200.613 €\n```\n:::\n\n```{.r .cell-code}\n# Bar plot of sales by state\nsales_by_state_tbl %>%\n  ggplot(aes(x = state, y = sales, fill = state)) +\n  geom_col() +   \n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\",\n                                                    decimal.mark = \",\",\n                                                    prefix = \"\",\n                                                    suffix = \" €\")) +\n  labs(title = \"Revenue by State\",\n       x = \"State\",\n       y = \"Sales\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels\n```\n\n::: {.cell-output-display}\n![](01_tidyverse_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(\"../../assets/img/tidyverse_1.png\", width = 15, height = 10, units = \"in\", dpi = 300) \n```\n:::\n\n\n![](../../assets/img/tidyverse_1.png){width=80% fig-align=\"center\"}\n\n::: {.cell hash='01_tidyverse_cache/html/unnamed-chunk-2_f910466437900fd2d36bd0faf5c55fdf'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(lubridate)\n#---- Part-2 ----\n\n# Calculate sales by state and year\nsales_by_state_year_tbl <- bike_orderlines_wrangled_tbl %>%\n  group_by(state, year = year(order_date)) %>%\n  summarize(sales = sum(total_price)) %>%\n  ungroup() %>%\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\",\n                                     decimal.mark = \",\",\n                                     prefix = \"\",\n                                     suffix = \" €\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `summarise()` has grouped output by 'state'. You can override using the\n#> `.groups` argument.\n```\n:::\n\n```{.r .cell-code}\n# Faceted bar plot of sales by state and year\nsales_by_state_year_tbl %>%\n  ggplot(aes(x = year, y = sales, fill = state)) +\n  geom_col() +\n  facet_wrap(~ state) +\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\",\n                                                    decimal.mark = \",\",\n                                                    prefix = \"\",\n                                                    suffix = \" €\")) +\n  labs(title = \"Revenue by State & Year\",\n       x = \"Year\",\n       y = \"Sales\") +\n  facet_wrap(~ state, ncol = 3) +   # Create 12 facets (4 rows x 3 columns)\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels\n```\n\n::: {.cell-output-display}\n![](01_tidyverse_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Save the plot\nggsave(\"../../assets/img/tidyverse_2.png\", width = 15, height = 10, units = \"in\", dpi = 300) \n```\n:::\n\n![](../../assets/img/tidyverse_2.png){width=80% fig-align=\"center\"}\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}