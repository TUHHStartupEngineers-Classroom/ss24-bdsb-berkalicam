{
  "hash": "7df94e0929b50d9fe2c91225c98889a2",
  "result": {
    "markdown": "---\ntitle: \"Data Acquisition\"\nauthor: \"Berk Ali Cam\"\n---\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-1_3cece464e58d08d64a3d7cd401ffdc96'}\n\n```{.r .cell-code}\nlibrary(ROpenWeatherMap)\nlibrary(tidyverse)\nlibrary(lubridate) \nlibrary(glue)\nlibrary(rvest)\n\n#---- Part-1 ----\n\nAPI_KEY <- Sys.getenv(\"API_KEY\")\n\ncurrent_weather <- get_current_weather(API_KEY, city = \"Hamburg\")\n\nweather_data <- tibble(timestamp = as_datetime(current_weather$dt),           # Timestamp of data\n                       city = current_weather$name,                           # City name\n                       country = current_weather$sys$country,                 # Country code\n                       longitude = current_weather$coord$lon,                 # Longitude\n                       latitude = current_weather$coord$lat,                  # Latitude\n                       weather_main = current_weather$weather$main,           # Main weather condition (e.g., \"Clouds\")\n                       weather_description = current_weather$weather$description, # Detailed description (e.g., \"overcast clouds\")\n                       temperature = current_weather$main$temp - 273.15,       # Temperature in Celsius\n                       feels_like = current_weather$main$feels_like - 273.15,  # Feels like temperature in Celsius\n                       temp_min = current_weather$main$temp_min - 273.15,     # Minimum temperature in Celsius\n                       temp_max = current_weather$main$temp_max - 273.15,     # Maximum temperature in Celsius\n                       pressure = current_weather$main$pressure,             # Atmospheric pressure\n                       humidity = current_weather$main$humidity,             # Humidity percentage\n                       wind_speed = current_weather$wind$speed,              # Wind speed\n                       wind_deg = current_weather$wind$deg                   # Wind direction (degrees)\n)\n\nglimpse(weather_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> Rows: 1\n#> Columns: 15\n#> $ timestamp           <dttm> 2024-05-12 12:58:55\n#> $ city                <chr> \"Hamburg\"\n#> $ country             <chr> \"DE\"\n#> $ longitude           <int> 10\n#> $ latitude            <dbl> 53.55\n#> $ weather_main        <chr> \"Clouds\"\n#> $ weather_description <chr> \"broken clouds\"\n#> $ temperature         <dbl> 19.4\n#> $ feels_like          <dbl> 18.75\n#> $ temp_min            <dbl> 17.92\n#> $ temp_max            <dbl> 21.83\n#> $ pressure            <int> 1021\n#> $ humidity            <int> 52\n#> $ wind_speed          <dbl> 6.17\n#> $ wind_deg            <int> 100\n```\n:::\n\n```{.r .cell-code}\n#---- Part-2 ----\n\n# Load the main page\nurl_home <- \"https://www.rosebikes.de/fahrräder\"\nhtml_home <- read_html(url_home)\n\n# Go to catalog\nbike_categories <- html_home %>%\n  html_nodes(css = \".catalog-navigation__link\")\n\n# Get all the links for each category\nlinks <- sapply(bike_categories, function(x) {x %>% html_attr(\"href\")})\n\nlinks <- links %>%\n  enframe(name = \"position\", value = \"subdirectory\") %>%\n  mutate(\n    url = glue(\"https://www.rosebikes.de{subdirectory}\"))  %>%\n  distinct(url)\n\n# For the given url , locate all the products by title and scrape their information\nscrape_data <- function(url) {\n  html_bike_cat <- read_html(url)\n  listings <- html_nodes(html_bike_cat, css = '.catalog-category-bikes__price-title') %>% \n    html_text(trim=TRUE) %>%              \n    str_replace_all(\" \",\"\") %>%\n    str_replace_all(\"ab\", \"\") %>%\n    str_replace_all(\"€\", \"\") %>%\n    str_replace_all(\"\\n\", \"\") %>%\n    str_replace_all(\"\\\\.\", \"\") %>%\n    str_replace_all(\",\", \"\\\\.\") %>%\n    iconv('utf-8', 'ascii', sub='') %>%\n    as.numeric()\n  \n  names <- html_nodes(html_bike_cat, xpath = '//basic-headline/h4') %>% \n    html_text() %>%\n    str_replace_all(\"\\n\", \"\") %>%\n    str_to_title()\n  \n  categories <- rep(url %>% str_replace_all(\"https://www.rosebikes.de/fahrräder/\", \"\"), \n                    each=length(names)) %>%\n    str_to_title()\n  \n  return(list(\"prices\" = listings, \"names\" = names, \"categories\" = categories))\n}\n\n# Initiate the dataframe\nrosebikes_df <- tibble()\n\nfor (url in links$url) {\n  data <- scrape_data(url) \n  rosebikes_df <- bind_rows(rosebikes_df, data) \n}\n\nhead(rosebikes_df, 10)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"prices\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"names\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"categories\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"2699\",\"2\":\"Pdq\",\"3\":\"Mtb\"},{\"1\":\"499\",\"2\":\"Count Solo\",\"3\":\"Mtb\"},{\"1\":\"2299\",\"2\":\"Thrill Hill\",\"3\":\"Mtb\"},{\"1\":\"1499\",\"2\":\"Ground Control\",\"3\":\"Mtb\"},{\"1\":\"1799\",\"2\":\"Root Miller\",\"3\":\"Mtb\"},{\"1\":\"999\",\"2\":\"Bonero\",\"3\":\"Mtb\"},{\"1\":\"3299\",\"2\":\"Scrub\",\"3\":\"Mtb\"},{\"1\":\"799\",\"2\":\"The Bruce\",\"3\":\"Mtb\"},{\"1\":\"3999\",\"2\":\"Root Miller Plus\",\"3\":\"Mtb\"},{\"1\":\"4499\",\"2\":\"Bonero Plus\",\"3\":\"Mtb\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n# Check if any prices are unusually high or low \nunreasonable_prices <- rosebikes_df %>% \n  filter(prices < 100 | prices > 5000) # \nprint(unreasonable_prices)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> # A tibble: 3 × 3\n#>   prices names                      categories\n#>    <dbl> <chr>                      <chr>     \n#> 1   8999 Xlite Unltd                Rennrad   \n#> 2   8999 Xlite Unltd Kittel Edition Rennrad   \n#> 3   5499 Mayor Plus                 E-Bike\n```\n:::\n\n```{.r .cell-code}\n#Save the dataframe\nrosebikes_df %>% \n  write_rds(\"../../assets/datasets/rosebikes_df.rds\")\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}